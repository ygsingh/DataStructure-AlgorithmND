Run time analysis (Worst Case Big-O Notation) of different Tasks.
*****************************************************************
## Task0
********
Get Item for list using index = O(1)

## Task1
********
Following operations are used in the algorithm
1. append phoneNumber list for all phone numbers.  -> O(n)
2. uniqueArray function:
   1. for all in sequence:    -> O(n)
   2. lookup element in list  -> O(1)
   3. append                  -> O(1)
3. Get length                 -> O(1)

Overall time complexity -> O(n)

## Task2
********
1. Initialize dictionary for all calls -> O(n)
2. for all calls update dictionary     -> O(n)
3. Python max function                 -> O(n)
4. Get max item from the list          -> O(1)
5. Get telephone number from list      -> O(1)

Overall time complexity -> O(n)

## Task3: Part A & Part B:
**************************

Functions with time complexities:
1. findCode      - O(1)
2. uniqueArray   - O(n)
3. printCodes    - O(n^2)

1. for all call in calls   -> O(n)
   1. operations in this routine are all O(1)
2. call to uniqueArray funciton -> O(n)
3. call to printCodes           -> O(n^2)

Overall time complexity -> O(n^2)

## Task4
********
1. Create 4 list from texts and calls   -> O(n)
2. for all outgoing calls in outgoing list -> O(n)
   1. Find element with 3 lists         -> O(1) each
   2. append element not in the lists   -> O(1)
3. Call to uniqueArray function         -> O(n)
4. Call to printCodes                   -> O(n^2)

Overall time complexity -> O(n^2)
